---
AWSTemplateFormatVersion: 2010-09-09
Description: This template sets up the basic framework for the RHEL with HA Partner Solution. (qs-1s2mh2a9e)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PrivateSubnet4CIDR
          - RemoteAccessCIDR
      - Label:
          default: Optional network configuration for BYOVPC (Bring your own VPC)
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1ARouteTable
          - PrivateSubnet2ARouteTable
          - PrivateSubnet3ARouteTable
          - PrivateSubnet4ARouteTable
          - PublicSubnetRouteTable
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - PrivateSubnet3AID
          - PrivateSubnet4AID
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - InstanceType
          - KeyPairName
          - NodeOS
          - FloatingIPAddress
          - ClusterPassword
          - ClusterName
          - Node1Name
          - Node2Name
          - Node3Name
          - Node4Name
      - Label:
          default: AWS Partner Solution configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      ClusterPassword:
        default: Cluster Password
      FloatingIPAddress:
        default: Floating IP Address
      InstanceType:
        default: Instance Type
      KeyPairName:
        default: Key Pair Name
      NodeOS:
        default: Node OS
      NumberOfAZs:
        default: Number of Availability Zones
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private Subnet 3 CIDR
      PrivateSubnet4CIDR:
        default: Private Subnet 4 CIDR
      RemoteAccessCIDR:
        default: Remote Access CIDR
      QSS3BucketName:
        default: Partner Solution S3 Bucket Name
      QSS3BucketRegion:
        default: Partner Solution S3 Bucket Region
      QSS3KeyPrefix:
        default: Partner Solution S3 Key Prefix
      VPCCIDR:
        default: VPC CIDR
      VPCID:
        default: ID of VPC to be used
      PublicSubnet1ID:
        default: ID of Public Subnet 1
      PublicSubnet2ID:
        default: ID of Public Subnet 2
      PrivateSubnet1ARouteTable:
        default: ID of Private Subnet 1 routing table
      PrivateSubnet2ARouteTable:
        default: ID of Private Subnet 2 routing table
      PrivateSubnet3ARouteTable:
        default: ID of Private Subnet 3 routing table
      PrivateSubnet4ARouteTable:
        default: ID of Private Subnet 4 routing table
      PublicSubnetRouteTable:
        default: ID of Public Subnet routing table
      PrivateSubnet1AID:
        default: ID of Private Subnet 1
      PrivateSubnet2AID:
        default: ID of Private Subnet 2
      PrivateSubnet3AID:
        default: ID of Private Subnet 3
      PrivateSubnet4AID:
        default: ID of Private Subnet 4
      ClusterName:
        default: Internal RHEL with HA cluster name
      Node1Name:
        default: Internal name for RHEL with HA cluster node 1
      Node2Name:
        default: Internal name for RHEL with HA cluster node 2
      Node3Name:
        default: Internal name for RHEL with HA cluster node 3
      Node4Name:
        default: Internal name for RHEL with HA cluster node 4
Parameters:
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. The logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  ClusterPassword:
    AllowedPattern: ^\S+$
    ConstraintDescription: Password should not be empty or contain whitespace
    Description: Password used for the user HACluster in the RHEL HA setup
    Type: String
    NoEcho: true
  NumberOfAZs:
    Description: Number of Availability Zones to use for the HA Cluster. This is same as the number of nodes that will be set up.
    Type: String
    Default: '3'
    AllowedValues:
      - '2'
      - '3'
      - '4'
  InstanceType:
    AllowedValues:
      - m6i.large
      - m6i.xlarge
      - m6i.2xlarge
      - m6i.4xlarge
      - m6i.8xlarge
      - m6i.12xlarge
      - m6i.16xlarge
      - m6i.24xlarge
      - m6i.32xlarge
      - m6i.metal
      - m6a.large
      - m6a.xlarge
      - m6a.2xlarge
      - m6a.4xlarge
      - m6a.8xlarge
      - m6a.12xlarge
      - m6a.16xlarge
      - m6a.24xlarge
      - m6a.32xlarge
      - m6a.48xlarge
      - m6a.metal
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlarge
      - c6i.8xlarge
      - c6i.12xlarge
      - c6i.16xlarge
      - c6i.24xlarge
      - c6i.32xlarge
      - c6i.metal
      - c6id.large
      - c6id.xlarge
      - c6id.2xlarge
      - c6id.4xlarge
      - c6id.8xlarge
      - c6id.12xlarge
      - c6id.16xlarge
      - c6id.24xlarge
      - c6id.32xlarge
      - c6id.metal
      - c6a.large
      - c6a.xlarge
      - c6a.2xlarge
      - c6a.4xlarge
      - c6a.8xlarge
      - c6a.12xlarge
      - c6a.16xlarge
      - c6a.24xlarge
      - c6a.32xlarge
      - c6a.48xlarge
      - c6a.metal
      - r6i.large
      - r6i.xlarge
      - r6i.2xlarge
      - r6i.4xlarge
      - r6i.8xlarge
      - r6i.12xlarge
      - r6i.16xlarge
      - r6i.24xlarge
      - r6i.32xlarge
      - r6i.metal
      - r6a.large
      - r6a.xlarge
      - r6a.2xlarge
      - r6a.4xlarge
      - r6a.8xlarge
      - r6a.12xlarge
      - r6a.16xlarge
      - r6a.24xlarge
      - r6a.32xlarge
      - r6a.48xlarge
      - r6a.metal
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - m5n.metal
      - m5zn.large
      - m5zn.xlarge
      - m5zn.2xlarge
      - m5zn.3xlarge
      - m5zn.6xlarge
      - m5zn.12xlarge
      - m5zn.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5.metal
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - c5n.metal
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c5a.24xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5.metal
      - r5n.large
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.8xlarge
      - r5n.12xlarge
      - r5n.16xlarge
      - r5n.24xlarge
      - r5n.metal
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
    ConstraintDescription: "must be a valid EC2 instance type."
    Default: t3.medium
    Description: "EC2 instance type. For the best performance, we recommend to use sixth (M, C, R, Hpc) or third (T) generation and later."
    Type: String
  KeyPairName:
    ConstraintDescription: "Name of an existing EC2 KeyPair."
    Description: Public/private key pairs allow you to securely connect to your instance after it launches
    Type: "AWS::EC2::KeyPair::KeyName"
  FloatingIPAddress:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    ConstraintDescription: IP Address must be in the form x.x.x.x
    Description: Floating IP Address (MUST not be in any of the subnets)
    Default: 10.1.1.0
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 3 located in Availability Zone 3
    Type: String
  PrivateSubnet4CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.96.0/19
    Description: CIDR block for private subnet 4 located in Availability Zone 4
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Partner Solution bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-ia
    Description: "S3 bucket name for the Partner Solution assets. Partner Solution bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Partner Solution S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Partner Solution key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: cfn-ps-red-hat-rhel-with-ha/
    Description: "S3 key prefix for the Partner Solution assets. Partner Solution key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
  NodeOS:
    AllowedValues:
      - 'RHELHA86HVM'
      - 'RHELHA87HVM'
      - 'RHELHA88HVM'
      - 'RHELHA90HVM'
      - 'RHELHA91HVM'
      - 'RHELHA92HVM'
    ConstraintDescription: The QuickStart supports RHEL8 and RHEL9
    Description: Version of RHEL with HA OS to use for the node instances
    Default: 'RHELHA88HVM'
    Type: String
  ClusterName:
    Default: newcluster
    AllowedPattern: "^[0-9a-zA-Z]*$"
    ConstraintDescription: "The cluster name can include numbers, lowercase letters and uppercase letters."
    Description: Internal name of the RHEL with HA cluster, also used as part of the internal node name
    Type: String
  Node1Name:
    Default: node1
    AllowedPattern: "^[0-9a-zA-Z]*$"
    ConstraintDescription: "The node name can include numbers, lowercase letters and uppercase letters."
    Description: Internal name of the RHEL with HA node 1
    Type: String
  Node2Name:
    Default: node2
    AllowedPattern: "^[0-9a-zA-Z]*$"
    ConstraintDescription: "The node name can include numbers, lowercase letters and uppercase letters."
    Description: Internal name of the RHEL with HA node 2
    Type: String
  Node3Name:
    Default: node3
    AllowedPattern: "^[0-9a-zA-Z]*$"
    ConstraintDescription: "The node name can include numbers, lowercase letters and uppercase letters."
    Description: Internal name of the RHEL with HA node 3
    Type: String
  Node4Name:
    Default: node4
    AllowedPattern: "^[0-9a-zA-Z]*$"
    ConstraintDescription: "The node name can include numbers, lowercase letters and uppercase letters."
    Description: Internal name of the RHEL with HA node 4
    Type: String
  VPCID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The VPC ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing VPC. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PublicSubnet1ID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Public Subnet 1. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PublicSubnet2ID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Public Subnet 2. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet1ARouteTable:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Route Table ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 1 Routing Table. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet2ARouteTable:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Route Table ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 2 Routing Table. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet3ARouteTable:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Route Table ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 3 Routing Table. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet4ARouteTable:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Route Table ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 4 Routing Table. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PublicSubnetRouteTable:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Route Table ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Public Subnet Routing Table. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet1AID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 1. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet2AID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 2. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet3AID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 3. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
  PrivateSubnet4AID:
    AllowedPattern: "^[0-9a-zA-Z-]*$"
    ConstraintDescription: "The Subnet ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Description: "ID of existing Private Subnet 4. The ID can include numbers, lowercase letters, uppercase letters and hyphens (-)."
    Default: ''
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  Three:  !Equals [!Ref NumberOfAZs, "3"]
  Four:   !Equals [!Ref NumberOfAZs, "4"]
  ThreeOrFour: !Or [Condition: Three, Condition: Four]
  CreateVPC:
    !And
      - !Equals ["", !Ref VPCID]
      - !Equals ["", !Ref PublicSubnet1ID]
      - !Equals ["", !Ref PublicSubnet2ID]
      - !Equals ["", !Ref PrivateSubnet1ARouteTable]
      - !Equals ["", !Ref PrivateSubnet2ARouteTable]
      - !Equals ["", !Ref PublicSubnetRouteTable]
      - !Equals ["", !Ref PrivateSubnet1AID]
      - !Equals ["", !Ref PrivateSubnet2AID]
Mappings:
  AWSAMIRegionMap:
    "us-east-1":
      RHELHA86HVM: "ami-0d24b5d367ff2557b"
      RHELHA87HVM: "ami-036333d7d902c93ec"
      RHELHA88HVM: "ami-050aa53cc9e0aa492"
      RHELHA90HVM: "ami-02898b32d4329ad3d"
      RHELHA91HVM: "ami-074186d8abe62d212"
      RHELHA92HVM: "ami-0ab9230aca57ec95b"
    "us-east-2":
      RHELHA86HVM: "ami-0188af8f4e83db18b"
      RHELHA87HVM: "ami-09841bb1ddf22956e"
      RHELHA88HVM: "ami-028295e14d693d0c8"
      RHELHA90HVM: "ami-09553de4665ef9e23"
      RHELHA91HVM: "ami-0b71c648601ed9bba"
      RHELHA92HVM: "ami-0e2fb9aa01c471d03"
    "us-west-1":
      RHELHA86HVM: "ami-0b671ecdb7ed05707"
      RHELHA87HVM: "ami-05766ebf135a22e64"
      RHELHA88HVM: "ami-09ddadb299dba2208"
      RHELHA90HVM: "ami-0d4fb231698962560"
      RHELHA91HVM: "ami-0e1d6a6550d707a45"
      RHELHA92HVM: "ami-03ebab98963354f17"
    "us-west-2":
      RHELHA86HVM: "ami-0e87f3b5fb0ea5a5a"
      RHELHA87HVM: "ami-03ecf7945c1ad43dc"
      RHELHA88HVM: "ami-05ef7669d628b646f"
      RHELHA90HVM: "ami-0592594e3954e6309"
      RHELHA91HVM: "ami-049340ce5c8942268"
      RHELHA92HVM: "ami-0990b0a747730fea3"
    "af-south-1":
      RHELHA86HVM: "ami-0f8fc90496d4970b8"
      RHELHA87HVM: "ami-0a10725be8e755aeb"
      RHELHA88HVM: "ami-06cef80059b5663c0"
      RHELHA90HVM: "ami-02c1323b15ae00953"
      RHELHA91HVM: "ami-017e2978f5f3d9b04"
      RHELHA92HVM: "ami-0520f659e63241c65"
    "ap-east-1":
      RHELHA86HVM: "ami-035f582573bf5877e"
      RHELHA87HVM: "ami-0b69f3ff511f9d0f6"
      RHELHA88HVM: "ami-0bb1f57f0e045461b"
      RHELHA90HVM: "ami-04be3d35b838f80cb"
      RHELHA91HVM: "ami-08e05e87c9d957572"
      RHELHA92HVM: "ami-06778dfc839154edd"
    "ap-south-2":
      RHELHA86HVM: "ami-0e0349b9b57372a4d"
      RHELHA87HVM: "ami-09ff0519936c83836"
      RHELHA88HVM: "ami-092056bf18b946454"
      RHELHA90HVM: "ami-073fbaf0edfbf5458"
      RHELHA91HVM: "ami-02f61d563e8e3b0e9"
      RHELHA92HVM: "ami-06668f2c68258ab61"
    "ap-southeast-3":
      RHELHA86HVM: "ami-08cc4a56222fd0b3d"
      RHELHA87HVM: "ami-0a0864eb978c2d9a6"
      RHELHA88HVM: "ami-0b56f7fcd88f262c2"
      RHELHA90HVM: "ami-0a98199b16722b76b"
      RHELHA91HVM: "ami-0e19e798350aba525"
      RHELHA92HVM: "ami-04b228f4b6daff6b7"
    "ap-southeast-4":
      RHELHA86HVM: "ami-074b00b5d7c0673ec"
      RHELHA87HVM: "ami-0d75df347f957ef05"
      RHELHA88HVM: "ami-0221a0d28ed3b7235"
      RHELHA90HVM: "ami-048772c9cc8e18e55"
      RHELHA91HVM: "ami-0ae7b9f4aeb5dc3db"
      RHELHA92HVM: "ami-0c327a414b4e7ae9f"
    "ap-south-1":
      RHELHA86HVM: "ami-0f9d278ace56d0b19"
      RHELHA87HVM: "ami-03a9ee30359cf4bc8"
      RHELHA88HVM: "ami-0936dc60a13fc6006"
      RHELHA90HVM: "ami-0b630abb20df12556"
      RHELHA91HVM: "ami-0ceed8aa68032d786"
      RHELHA92HVM: "ami-0125034387f25f530"
    "ap-northeast-3":
      RHELHA86HVM: "ami-0261a5083740f9c6d"
      RHELHA87HVM: "ami-0dac0d480260d49ea"
      RHELHA88HVM: "ami-0a6ab462aa150e37f"
      RHELHA90HVM: "ami-0b766e0e9fb2cd32e"
      RHELHA91HVM: "ami-0fb8ef2bab4d0f25f"
      RHELHA92HVM: "ami-0dd09774ab7b0fc01"
    "ap-northeast-2":
      RHELHA86HVM: "ami-023414b233fb79cfa"
      RHELHA87HVM: "ami-0f7e6b829c9ae3cbf"
      RHELHA88HVM: "ami-0e4aaa29f895cfa19"
      RHELHA90HVM: "ami-025153f48332a8de0"
      RHELHA91HVM: "ami-0d97a779db5c3a765"
      RHELHA92HVM: "ami-06f62b9665b531042"
    "ap-southeast-1":
      RHELHA86HVM: "ami-0b2b7d0ec00bc1f04"
      RHELHA87HVM: "ami-0fec7f284a6c8f885"
      RHELHA88HVM: "ami-085435f7aac0634a8"
      RHELHA90HVM: "ami-0ee8e0ab62f80a9a7"
      RHELHA91HVM: "ami-09220bc6585571378"
      RHELHA92HVM: "ami-001b1f151fbd9806d"
    "ap-southeast-2":
      RHELHA86HVM: "ami-0f4030bf747d59345"
      RHELHA87HVM: "ami-0a2c2699752f4bb02"
      RHELHA88HVM: "ami-06041d957b46a4555"
      RHELHA90HVM: "ami-0c6363a909c56dd67"
      RHELHA91HVM: "ami-0ad753ecaec382cf6"
      RHELHA92HVM: "ami-026f18b45ff612222"
    "ap-northeast-1":
      RHELHA86HVM: "ami-0347f46bc0ff51259"
      RHELHA87HVM: "ami-037363e0794e85af0"
      RHELHA88HVM: "ami-0ef1a8873958b3312"
      RHELHA90HVM: "ami-05df9b7e4bf893c78"
      RHELHA91HVM: "ami-0f555304fa64a5762"
      RHELHA92HVM: "ami-0dd3399e16f4dc24e"
    "ca-central-1":
      RHELHA86HVM: "ami-014a1bfbde981b3c2"
      RHELHA87HVM: "ami-03f59df645b6ce5c5"
      RHELHA88HVM: "ami-0353f0ea08c9c01cf"
      RHELHA90HVM: "ami-03528db39397db695"
      RHELHA91HVM: "ami-0149d341ad9957d39"
      RHELHA92HVM: "ami-03467364e223a95ae"
    "eu-central-1":
      RHELHA86HVM: "ami-02e624650a8f7f6ee"
      RHELHA87HVM: "ami-02da1af10c90eaa04"
      RHELHA88HVM: "ami-09bd54779f97aa2e1"
      RHELHA90HVM: "ami-0417280d3037edfd6"
      RHELHA91HVM: "ami-087a3abf6f4f4625c"
      RHELHA92HVM: "ami-0da09574793dfada7"
    "eu-west-1":
      RHELHA86HVM: "ami-00bf77eb51a5ea903"
      RHELHA87HVM: "ami-028672500b94cb531"
      RHELHA88HVM: "ami-0b4c02c04b2cc0b20"
      RHELHA90HVM: "ami-0415e1857890cffd6"
      RHELHA91HVM: "ami-054b35f3f241e5acc"
      RHELHA92HVM: "ami-0212f613623e800d0"
    "eu-west-2":
      RHELHA86HVM: "ami-06be95d00d9965f43"
      RHELHA87HVM: "ami-015efc604a6ae0078"
      RHELHA88HVM: "ami-08825379d82045a56"
      RHELHA90HVM: "ami-0fd10df294e38be27"
      RHELHA91HVM: "ami-05e0096c5124b6490"
      RHELHA92HVM: "ami-0be99727a9f5d77e8"
    "eu-south-1":
      RHELHA86HVM: "ami-0242fd7925e40a70a"
      RHELHA87HVM: "ami-0a9842840ba3e9363"
      RHELHA88HVM: "ami-0812ef84d7e4f593e"
      RHELHA90HVM: "ami-0b9168d8d95918dd3"
      RHELHA91HVM: "ami-0d171a386e57ac9fe"
      RHELHA92HVM: "ami-0a13115dbd189ab1a"
    "eu-west-3":
      RHELHA86HVM: "ami-0fb0bac4ae236fda7"
      RHELHA87HVM: "ami-0ac5164c51cd393bc"
      RHELHA88HVM: "ami-081d2bb49029ad39d"
      RHELHA90HVM: "ami-0280ef6e6b4797ef0"
      RHELHA91HVM: "ami-045e4f0a801840daf"
      RHELHA92HVM: "ami-0dbfca1951c4d4f54"
    "eu-south-2":
      RHELHA86HVM: "ami-070f84deef6c5530d"
      RHELHA87HVM: "ami-06171e34781f8dffc"
      RHELHA88HVM: "ami-0d0f2370e292cd06f"
      RHELHA90HVM: "ami-08d473b2387bac871"
      RHELHA91HVM: "ami-036faaeb08f436e48"
      RHELHA92HVM: "ami-0d835b01edf07bff0"
    "eu-north-1":
      RHELHA86HVM: "ami-022d38fa78f822277"
      RHELHA87HVM: "ami-0e052b800f9990724"
      RHELHA88HVM: "ami-0541c4d37182fa0ec"
      RHELHA90HVM: "ami-0d277ce2cf6c2f209"
      RHELHA91HVM: "ami-0f23f66f6e836c9e0"
      RHELHA92HVM: "ami-0c09d1b852ebcf02a"
    "eu-central-2":
      RHELHA86HVM: "ami-0d15eec683278840d"
      RHELHA87HVM: "ami-04cd1d8ea4e42cdbb"
      RHELHA88HVM: "ami-019d04c0158876bcc"
      RHELHA90HVM: "ami-0abfd643666f06114"
      RHELHA91HVM: "ami-0ad6de85a8b717c26"
      RHELHA92HVM: "ami-0760cf87a17fe799b"
    "me-south-1":
      RHELHA86HVM: "ami-0195aa893674b239e"
      RHELHA87HVM: "ami-06a8eab76969a2e35"
      RHELHA88HVM: "ami-0824d5bc90d7b7439"
      RHELHA90HVM: "ami-02bb7bc554e6741f3"
      RHELHA91HVM: "ami-08371f099a68d7db1"
      RHELHA92HVM: "ami-0f52fb797dde47592"
    "me-central-1":
      RHELHA86HVM: "ami-0d4014836a983ffcf"
      RHELHA87HVM: "ami-0e9648741d23a3f91"
      RHELHA88HVM: "ami-006a1fedc0f447490"
      RHELHA90HVM: "ami-06f3e998050c35eaa"
      RHELHA91HVM: "ami-088c0ae9b55441ff0"
      RHELHA92HVM: "ami-0503d842d8321fa61"
    "il-central-1":
      RHELHA86HVM: "ami-0d6e4e93884db4161"
      RHELHA87HVM: "ami-08696693c7aef53ce"
      RHELHA88HVM: "ami-0e6705a4ac4bc31bf"
      RHELHA90HVM: "ami-07fbe4df3f873d9ee"
      RHELHA91HVM: "ami-0180664ef9cc34f7b"
      RHELHA92HVM: "ami-04e8a133ebedb4585"
    "sa-east-1":
      RHELHA86HVM: "ami-0218cb0718377daf7"
      RHELHA87HVM: "ami-0fbccb1e5edbfb522"
      RHELHA88HVM: "ami-00763bbaacce9c919"
      RHELHA90HVM: "ami-0929b5ddf31109a87"
      RHELHA91HVM: "ami-0551b09f7806de834"
      RHELHA92HVM: "ami-0bde8987b0ecc3bf8"
Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateVPC
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/cfn-ps-aws-vpc/templates/aws-vpc.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join 
          - ','
          - !Ref AvailabilityZones
        NumberOfAZs: !Ref NumberOfAZs
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PrivateSubnet4ACIDR: !Ref PrivateSubnet4CIDR
        VPCCIDR: !Ref VPCCIDR
  BastionStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/cfn-ps-linux-bastion/templates/linux-bastion-entrypoint-existing-vpc.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPCID: !If [CreateVPC, !GetAtt VPCStack.Outputs.VPCID, !Ref VPCID]
        PublicSubnet1ID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PublicSubnet1ID, !Ref PublicSubnet1ID]
        PublicSubnet2ID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PublicSubnet2ID, !Ref PublicSubnet2ID]
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix:
          Fn::Sub: ${QSS3KeyPrefix}submodules/cfn-ps-linux-bastion/
  WaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'
  WaitCondition:
    Type: 'AWS::CloudFormation::WaitCondition'
    Properties:
      Handle: !Ref WaitHandle
      Count: !If [Four, 3, !If [Three, 2, 1]]
      Timeout: '3600'

  OverlayIPRoutePrivateSubnet1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet1ARouteTable, !Ref PrivateSubnet1ARouteTable]
      DestinationCidrBlock: !Sub '${FloatingIPAddress}/32'
      InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId
  OverlayIPRoutePrivateSubnet2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet2ARouteTable, !Ref PrivateSubnet2ARouteTable]
      DestinationCidrBlock: !Sub '${FloatingIPAddress}/32'
      InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId
  OverlayIPRoutePrivateSubnet3:
    Type: AWS::EC2::Route
    Condition: ThreeOrFour
    Properties:
      RouteTableId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet3ARouteTable, !Ref PrivateSubnet3ARouteTable]
      DestinationCidrBlock: !Sub '${FloatingIPAddress}/32'
      InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId
  OverlayIPRoutePrivateSubnet4:
    Type: AWS::EC2::Route
    Condition: Four
    Properties:
      RouteTableId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet4ARouteTable, !Ref PrivateSubnet4ARouteTable]
      DestinationCidrBlock: !Sub '${FloatingIPAddress}/32'
      InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId
  OverlayIPRoutePublicSubnet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PublicSubnetRouteTable, !Ref PublicSubnetRouteTable]
      DestinationCidrBlock: !Sub '${FloatingIPAddress}/32'
      InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId

  ClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Sets up inbound rule for communication among nodes'
      VpcId: !If [CreateVPC, !GetAtt VPCStack.Outputs.VPCID, !Ref VPCID]
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: !Ref VPCCIDR
  ClusterRole:
    Type: 'AWS::IAM::Role'
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyWildcardResource #Only until 'LastNodeStack' is deployed, limit to specific EC2 instances in 'LockdownClusterRolePolicyReboot' Resource
    Properties:
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore' # Used by amazon-ssm-agent
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMDirectoryServiceAccess' # Used by amazon-ssm-agent
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy' # Used by amazon-ssm-agent
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: "RHEL with HA Partner Solution - EC2 Instance IAM Role to allow fencing and ssm agent usage"
      Path: /
      Policies:
        - PolicyName: NodeFencing
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeTags
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - ec2:RebootInstances
                  - ec2:ModifyInstanceAttribute
                Resource: "*"

  PolicyRouteTable:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ClusterRole
      PolicyName: OverlayIP
      PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeRouteTables
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:ReplaceRoute
                Resource:
                  - !Sub ["arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${RouteTableID}", RouteTableID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PublicSubnetRouteTable, !Ref PublicSubnetRouteTable]]
                  - !Sub ["arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${RouteTableID}", RouteTableID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet1ARouteTable, !Ref PrivateSubnet1ARouteTable]]
                  - !Sub ["arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${RouteTableID}", RouteTableID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet2ARouteTable, !Ref PrivateSubnet2ARouteTable]]
                  - !If [ThreeOrFour, !Sub ["arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${RouteTableID}", RouteTableID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet3ARouteTable, !Ref PrivateSubnet3ARouteTable]], !Ref AWS::NoValue]
                  - !If [Four, !Sub ["arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:route-table/${RouteTableID}", RouteTableID: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet4ARouteTable, !Ref PrivateSubnet4ARouteTable]], !Ref AWS::NoValue]

  ClusterInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref ClusterRole

  RHELwithHAInstanceLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        DisableApiStop: false
        DisableApiTermination: false
        MaintenanceOptions:
          AutoRecovery: disabled
        MetadataOptions:
          HttpEndpoint: enabled
          HttpTokens: required
          InstanceMetadataTags: enabled
        KeyName: !Ref KeyPairName
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt ClusterInstanceProfile.Arn
        ImageId: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", !Ref NodeOS]
        SecurityGroupIds:
          - !Ref ClusterSecurityGroup

  FirstNodeStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/node.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Tags:
        - Key: Name
          Value:
            !Sub
              - ${NodeName}.${ClusterName}
              - NodeName: !Ref Node1Name
      Parameters:
        LaunchTemplateId: !Ref RHELwithHAInstanceLaunchTemplate
        SubnetId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet1AID, !Ref PrivateSubnet1AID]
        ClusterPassword: !Ref ClusterPassword
        WaitHandle: !Ref WaitHandle
        ClusterName: !Ref ClusterName
        NodeName: !Ref Node1Name

  ExtraNode1Stack:
    Type: 'AWS::CloudFormation::Stack'
    Condition: ThreeOrFour
    DependsOn: FirstNodeStack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/node.template.yaml
          - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
            S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Tags:
        - Key: Name
          Value:
            !Sub
              - ${NodeName}.${ClusterName}
              - NodeName: !Ref Node2Name
      Parameters:
        LaunchTemplateId: !Ref RHELwithHAInstanceLaunchTemplate
        SubnetId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet3AID, !Ref PrivateSubnet3AID]
        ClusterPassword: !Ref ClusterPassword
        WaitHandle: !Ref WaitHandle
        ClusterName: !Ref ClusterName
        NodeName: !Ref Node2Name

  ExtraNode2Stack:
    Type: 'AWS::CloudFormation::Stack'
    Condition: Four
    DependsOn: ExtraNode1Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/node.template.yaml
          - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
            S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Tags:
        - Key: Name
          Value:
            !Sub
              - ${NodeName}.${ClusterName}
              - NodeName: !Ref Node3Name
      Parameters:
        LaunchTemplateId: !Ref RHELwithHAInstanceLaunchTemplate
        SubnetId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet4AID, !Ref PrivateSubnet4AID]
        ClusterPassword: !Ref ClusterPassword
        WaitHandle: !Ref WaitHandle
        ClusterName: !Ref ClusterName
        NodeName: !Ref Node3Name

  LastNodeStack:
    Type: 'AWS::CloudFormation::Stack'
    DependsOn: WaitCondition
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/lastnode.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Tags:
        - Key: Name
          Value:
            !Sub
              - ${NodeName}.${ClusterName}
              - NodeName: !If [ThreeOrFour, !Ref Node3Name, !If [Four, !Ref Node4Name, !Ref Node2Name]]
      Parameters:
        LaunchTemplateId: !Ref RHELwithHAInstanceLaunchTemplate
        SubnetId: !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet2AID, !Ref PrivateSubnet2AID]
        ClusterPassword: !Ref ClusterPassword
        FloatingIPAddress: !Ref FloatingIPAddress
        RouteTableId: !Join
          - ','
          - - !If [CreateVPC, !GetAtt VPCStack.Outputs.PublicSubnetRouteTable, !Ref PublicSubnetRouteTable]
            - !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet1ARouteTable, !Ref PrivateSubnet1ARouteTable]
            - !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet2ARouteTable, !Ref PrivateSubnet2ARouteTable]
            - !If [ThreeOrFour, !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet3ARouteTable, !Ref PrivateSubnet3ARouteTable], !Ref AWS::NoValue]
            - !If [Four, !If [CreateVPC, !GetAtt VPCStack.Outputs.PrivateSubnet4ARouteTable, !Ref PrivateSubnet4ARouteTable], !Ref AWS::NoValue]
        NodeHostnames: !Join
          - ' '
          - - !GetAtt FirstNodeStack.Outputs.PrivateDnsName
            - !If [ThreeOrFour, !GetAtt ExtraNode1Stack.Outputs.PrivateDnsName, !Ref AWS::NoValue]
            - !If [Four, !GetAtt ExtraNode2Stack.Outputs.PrivateDnsName, !Ref AWS::NoValue]
        ClusterHostMap: !Join
          - ';'
          - - !Join [':', [ !GetAtt FirstNodeStack.Outputs.PrivateDnsName, !GetAtt FirstNodeStack.Outputs.InstanceId ] ]
            - !If [ ThreeOrFour, !Join [':', [ !GetAtt ExtraNode1Stack.Outputs.PrivateDnsName, !GetAtt ExtraNode1Stack.Outputs.InstanceId ] ], !Ref AWS::NoValue ]
            - !If [ Four, !Join [':', [ !GetAtt ExtraNode2Stack.Outputs.PrivateDnsName, !GetAtt ExtraNode2Stack.Outputs.InstanceId ] ], !Ref AWS::NoValue ]
        ClusterName: !Ref ClusterName
        NodeName: !If [ ThreeOrFour, !Ref Node3Name, !If [ Four, !Ref Node4Name, !Ref Node2Name ] ]

  LockdownClusterRolePolicyReboot:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ClusterRole
      PolicyName: NodeFencing
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:DescribeInstanceAttribute
              - ec2:DescribeTags
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:StartInstances
              - ec2:StopInstances
              - ec2:RebootInstances
              - ec2:ModifyInstanceAttribute
            Resource:
              - !Sub [ "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${InstanceId}", InstanceId: !GetAtt FirstNodeStack.Outputs.InstanceId ]
              - !If [ ThreeOrFour, !Sub [ "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${InstanceId}", InstanceId: !GetAtt ExtraNode1Stack.Outputs.InstanceId ], !Ref AWS::NoValue ]
              - !If [ Four, !Sub [ "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${InstanceId}", InstanceId: !GetAtt ExtraNode2Stack.Outputs.InstanceId ], !Ref AWS::NoValue ]
              - !Sub [ "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${InstanceId}", InstanceId: !GetAtt LastNodeStack.Outputs.InstanceId ]
