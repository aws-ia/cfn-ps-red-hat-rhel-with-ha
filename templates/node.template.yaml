---
AWSTemplateFormatVersion: 2010-09-09
Description: Deploy and configure RHEL with HA cluster node. (qs-1s2mh2abe)
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W4002
        - W9002 #Template is not customer-facing
        - W9003 #Template is not customer-facing
        - W9004 #Template is not customer-facing
        - W9006 #Template is not customer-facing
Parameters:
  SubnetId:
    Description: "Identifer of subnet the instance resides in"
    Type: AWS::EC2::Subnet::Id
  LaunchTemplateId:
    Description: "Identifier of the EC2 Launch Template used when creating the Instance"
    Type: String
  ClusterPassword:
    AllowedPattern: ^\S+$
    ConstraintDescription: Password should not be empty or contain whitespace
    Description: Password used for the user HACluster in the RHEL HA setup
    Type: String
    NoEcho: true
  ClusterRole:
    Description: IAM Role for access to the S3 Buckets
    Type: String
  WaitHandle:
    Type: String
Resources:
  RHELwithHAInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref ClusterRole
      AWS::CloudFormation::Init:
        configSets:
          setup:
            - 'install'
            - 'setup'
            - 'service'
        install:
          packages: 
            yum: 
              pcs: []
              pacemaker: []
              fence-agents-aws: []
        setup:
          commands:
            setpassword:
              command: "echo \"hacluster:$CLUSTERPASSWORD\" | sudo chpasswd" 
              env:
                CLUSTERPASSWORD: !Ref ClusterPassword
        service:
          services:
            systemd:
              pcsd:
                enabled: "true"
                ensureRunning: "true"
              nm-cloud-setup:
                enabled: "false"
                ensureRunning: "false"
              nm-cloud-setup.timer:
                enabled: "false"
                ensureRunning: "false"
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplateId
        Version: 1
      SourceDestCheck: false
      SubnetId: !Ref SubnetId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          rhel_ver=$(awk -F'=' '/VERSION_ID/{ gsub(/"/,""); print $2}' /etc/os-release)
          echo "RHEL Version: $rhel_ver"

          if [[ $rhel_ver == "8."* ]]; then
            sudo dnf -y install wget python3 python3-setuptools python3-docutils awscli
            sudo wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz -O /tmp/aws-cfn-bootstrap-py3-latest.tar.gz
            sudo easy_install-3 --script-dir /usr/local/bin /tmp/aws-cfn-bootstrap-py3-latest.tar.gz
          else
            sudo dnf -y install wget python3 python3-setuptools python3-pip unzip resource-agents-cloud
            curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o /tmp/awscliv2.zip
            cd /tmp
            unzip /tmp/awscliv2.zip
            sudo /tmp/aws/install
            sudo ln -s /usr/local/bin/aws /usr/bin/aws
            rm -rf /tmp/aws
            sudo wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz -O /tmp/aws-cfn-bootstrap-py3-latest.tar.gz
            sudo pip3 install /tmp/aws-cfn-bootstrap-py3-latest.tar.gz
          fi

          sudo dnf -y install https://s3.${AWS::Region}.amazonaws.com/amazon-ssm-${AWS::Region}/latest/linux_amd64/amazon-ssm-agent.rpm

          sudo aws configure set default.region "${AWS::Region}"
          sudo /usr/local/bin/cfn-init -v --stack "${AWS::StackName}" --resource "RHELwithHAInstance" --configsets setup --region "${AWS::Region}"
          sudo /usr/local/bin/cfn-signal -e $? "${WaitHandle}"
Outputs:
  InstanceId:
    Description: Instance ID of the EC2 Instance
    Value: !Ref RHELwithHAInstance
  PrivateDnsName:
    Description: PrivateDnsName of the EC2 Instance
    Value: !GetAtt RHELwithHAInstance.PrivateDnsName