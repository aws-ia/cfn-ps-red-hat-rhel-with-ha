---
AWSTemplateFormatVersion: 2010-09-09
Description: This template is only used to perform manual or taskcat based tests of the BYOVPC functionality. It's not supposed to be used as entrypoint to deploy the solution, please use 'main.template.yaml' instead. (qs-975kmvhbl)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PrivateSubnet4CIDR
          - RemoteAccessCIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - InstanceType
          - KeyPairName
          - NodeOS
          - FloatingIPAddress
          - ClusterPassword
      - Label:
          default: AWS Partner Solution configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      ClusterPassword:
        default: Cluster Password
      FloatingIPAddress:
        default: Floating IP Address
      InstanceType:
        default: Instance Type
      KeyPairName:
        default: Key Pair Name
      NodeOS:
        default: Node OS
      NumberOfAZs:
        default: Number of Availability Zones
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private Subnet 3 CIDR
      PrivateSubnet4CIDR:
        default: Private Subnet 4 CIDR
      RemoteAccessCIDR:
        default: Remote Access CIDR
      QSS3BucketName:
        default: Partner Solution S3 Bucket Name
      QSS3BucketRegion:
        default: Partner Solution S3 Bucket Region
      QSS3KeyPrefix:
        default: Partner Solution S3 Key Prefix
      VPCCIDR:
        default: VPC CIDR
Parameters:
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. The logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  ClusterPassword:
    AllowedPattern: ^\S+$
    ConstraintDescription: Password should not be empty or contain whitespace
    Description: Password used for the user HACluster in the RHEL HA setup
    Type: String
    NoEcho: true
  NumberOfAZs:
    Description: Number of Availability Zones to use for the HA Cluster. This is same as the number of nodes that will be set up.
    Type: String
    Default: '3'
    AllowedValues:
      - '2'
      - '3'
      - '4'
  InstanceType:
    AllowedValues:
      - t3.medium
    ConstraintDescription: "must be a valid EC2 instance type."
    Default: t3.medium
    Description: "EC2 instance type. For the best performance, we recommend to use sixth (M, C, R, Hpc) or third (T) generation and later."
    Type: String
  KeyPairName:
    ConstraintDescription: "Name of an existing EC2 KeyPair."
    Description: Public/private key pairs allow you to securely connect to your instance after it launches
    Type: "AWS::EC2::KeyPair::KeyName"
  FloatingIPAddress:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    ConstraintDescription: IP Address must be in the form x.x.x.x
    Description: Floating IP Address (MUST not be in any of the subnets)
    Default: 10.1.1.0
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 3 located in Availability Zone 3
    Type: String
  PrivateSubnet4CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.96.0/19
    Description: CIDR block for private subnet 4 located in Availability Zone 4
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Partner Solution bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "S3 bucket name for the Partner Solution assets. Partner Solution bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Partner Solution S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Partner Solution key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: implementing/
    Description: "S3 key prefix for the Partner Solution assets. Partner Solution key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
  NodeOS:
    AllowedValues:
      - 'RHELHA86HVM'
      - 'RHELHA87HVM'
      - 'RHELHA88HVM'
      - 'RHELHA90HVM'
      - 'RHELHA91HVM'
      - 'RHELHA92HVM'
    ConstraintDescription: The QuickStart supports RHEL8 and RHEL9
    Description: Version of RHEL with HA OS to use for the node instances
    Default: 'RHELHA88HVM'
    Type: String

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  Three:  !Equals [!Ref NumberOfAZs, "3"]
  Four:   !Equals [!Ref NumberOfAZs, "4"]
  ThreeOrFour: !Or [Condition: Three, Condition: Four]

Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/cfn-ps-aws-vpc/templates/aws-vpc.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join 
          - ','
          - !Ref AvailabilityZones
        NumberOfAZs: !Ref NumberOfAZs
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PrivateSubnet4ACIDR: !Ref PrivateSubnet4CIDR
        VPCCIDR: !Ref VPCCIDR
  RHEHAStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/main.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref AvailabilityZones
        ClusterPassword: !Ref ClusterPassword
        NumberOfAZs: !Ref NumberOfAZs
        InstanceType: !Ref InstanceType
        KeyPairName: !Ref KeyPairName
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        NodeOS: !Ref NodeOS
        FloatingIPAddress: !Ref FloatingIPAddress
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PrivateSubnet1ARouteTable: !GetAtt VPCStack.Outputs.PrivateSubnet1ARouteTable
        PrivateSubnet2ARouteTable: !GetAtt VPCStack.Outputs.PrivateSubnet2ARouteTable
        PrivateSubnet3ARouteTable: !If [ThreeOrFour, !GetAtt VPCStack.Outputs.PrivateSubnet3ARouteTable, !Ref AWS::NoValue]
        PrivateSubnet4ARouteTable: !If [Four, !GetAtt VPCStack.Outputs.PrivateSubnet4ARouteTable, !Ref AWS::NoValue]
        PublicSubnetRouteTable: !GetAtt VPCStack.Outputs.PublicSubnetRouteTable
        PrivateSubnet1AID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2AID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3AID: !If [ThreeOrFour, !GetAtt VPCStack.Outputs.PrivateSubnet3AID, !Ref AWS::NoValue]
        PrivateSubnet4AID: !If [Four, !GetAtt VPCStack.Outputs.PrivateSubnet4AID, !Ref AWS::NoValue]
